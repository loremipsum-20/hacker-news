{"version":3,"sources":["components/News/News.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["News","news","isLoading","className","hits","length","map","newsPost","href","url","target","rel","title","objectID","Searchbar","setUrl","useState","inputValue","setInputValue","onKeyDown","keyCode","onChange","value","type","placeholder","onClick","App","setNews","setIsLoading","useEffect","a","fetch","response","ok","json","jsonResponse","console","log","Error","alert","getNews","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGe,SAASA,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAEnC,OACE,8BAEKA,EACA,gCACA,gDACA,mBAAGC,UAAU,0CAGd,6BACqB,IAApBF,EAAKG,KAAKC,OAAeJ,EAAKG,KAAKE,KAAI,SAACC,GAAD,OACtC,6BACI,mBAAGC,KAAMD,EAASE,IAAKC,OAAO,SAASC,IAAI,aAA3C,SACCJ,EAASK,SAFLL,EAASM,aAOlB,kE,MCpBK,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAChC,EAAmCC,mBAAU,IAA7C,mBAAMC,EAAN,KAAkBC,EAAlB,KAYF,OACE,sBAAKf,UAAU,YAAf,UACI,uBACIgB,UAbR,YACmB,KADkB,EAAVC,SAErBL,EAAO,8CAAD,OAA+CE,KAYnDI,SARR,YAAoC,IAATX,EAAQ,EAARA,OACvBQ,EAAcR,EAAOY,QAQjBC,KAAK,OACLD,MAAOL,EACPO,YAAY,aAEhB,wBACIC,QAAS,kBACTV,EAAO,8CAAD,OAA+CE,KAFzD,SAII,mBAAGd,UAAY,sBCmBZuB,MA3Cf,WACE,MAAwBV,mBAAS,CAAEZ,KAAM,KAAzC,mBAAOH,EAAP,KAAa0B,EAAb,KAEA,EAAsBX,mBACtB,oDADA,mBAAOP,EAAP,KAAYM,EAAZ,KAGA,EAAkCC,oBAAS,GAA3C,mBAAOd,EAAP,KAAkB0B,EAAlB,KAqBA,OAnBAC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,6DAChBF,GAAa,GADG,kBAGQG,MAAMtB,GAHd,YAGTuB,EAHS,QAIAC,GAJA,iCAKeD,EAASE,OALxB,cAKNC,EALM,OAMZC,QAAQC,IAAIF,GACZR,EAAQQ,GACRP,GAAa,GARD,iCAWR,IAAIU,MAAM,mBAXF,kCAadC,MAAM,2CAbQ,0DAAH,qDAgBfC,KACC,CAAC/B,IAEA,sBAAKN,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,iCAGA,iCACA,cAACW,EAAD,CAAWb,KAAMA,EAAMQ,IAAKA,EAAKM,OAAQA,IACzC,cAAC,EAAD,CAAMd,KAAMA,EAAMC,UAAWA,OAE7B,iCACE,gDC9BOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.215995e1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./News.css\";\n\nexport default function News({ news, isLoading }) {\n  // console.log(news)\n  return (\n    <div>\n\n        {isLoading ? (\n         <div>\n         <p>Loading news...</p>\n         <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n         </div>\n        ) : (\n        <ol>\n        {news.hits.length !==0 ? (news.hits.map((newsPost) => (\n          <li key={newsPost.objectID}>\n              <a href={newsPost.url} target=\"_blank\" rel=\"noreferrer\">\n              {newsPost.title}\n              </a>\n          </li>\n        ))) :\n        (\n          <h2>0 results - please try again</h2>\n        )\n      }\n      </ol>\n      )}\n    </div>\n    );\n}\n","import React, { useState } from 'react';\nimport \"./Search.css\";\n\nexport default function Searchbar({ setUrl }) {\n    const[inputValue, setInputValue] = useState( \"\");\n\n    function handleOnKeyDown({ keyCode }){\n        if(keyCode === 13) {\n          setUrl(`https://hn.algolia.com/api/v1/search?query=${inputValue}`)\n      }\n    }\n\n    function handleInputValue({target}){\n        setInputValue(target.value);\n    }\n\n  return (\n    <div className=\"searchbar\">\n        <input\n            onKeyDown={handleOnKeyDown}\n            onChange={handleInputValue}\n            type=\"text\"\n            value={inputValue}\n            placeholder=\"Search..\"\n            />\n        <button\n            onClick={() =>\n            setUrl(`https://hn.algolia.com/api/v1/search?query=${inputValue}`)\n        }>\n            <i className = \"fa fa-search\"></i>\n        </button>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport News from './components/News/News.js'\nimport Searchbar from './components/Search/Search.js'\n\nfunction App() {\n  const [news, setNews] = useState({ hits: []});\n  //const [query, setQuery] = useState('');\n  const [url, setUrl] = useState(\n  'https://hn.algolia.com/api/v1/search?query=react',\n);\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const getNews = async () => {\n    setIsLoading(true);\n    try {\n     const response = await fetch(url)\n       if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n        setNews(jsonResponse);\n        setIsLoading(false);\n        return;\n      }\n      throw new Error(\"Request Failed!\");\n    } catch (error) {\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  getNews();\n}, [url]);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        +++ HACKER NEWS +++\n      </header>\n      <main>\n      <Searchbar news={news} url={url} setUrl={setUrl}/>\n      <News news={news} isLoading={isLoading}/>\n      </main>\n      <footer>\n        <p>Â© 2021</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}